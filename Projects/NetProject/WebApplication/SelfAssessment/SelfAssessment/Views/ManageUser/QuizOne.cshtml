@model SelfAssessment.Models.QuestionAnswer

<div class="content mt-3">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <strong>Assessment Name</strong>
                <div class="user-area dropdown float-right">

                    <a href="#" class="dropdown-toggle btn btn-primary" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="ti-export"></span>&nbsp; Export
                    </a>

                    @*<div class="user-menu dropdown-menu">
                        <a class="nav-link" href="#"><i class="ti-file"></i> Export AS PDF</a>
                        <a class="nav-link" href="#"><i class="ti-microsoft"></i> Export AS Excel</a>
                    </div>*@
                </div>

            </div>
            @*<div class="card-body card-block">
                    <form action="" method="post" class="form-horizontal">
                    <div class="row form-group">
                        <div class="col col-md-2"><label for="hf-password" class=" form-control-label">Levels</label></div>
                        <div class="col-12 col-md-4">
                            <select class="form-control" id="selectValue">
                                <option value="0">-Select-</option>
                                <option value="Level 1" selected>Level 1</option>
                                <option value="Level 2">Level 2</option>
                                <option value="Level 3">Level 3</option>

                            </select>
                        </div>

                    </div>

                    <div class="row form-group">
                        <div class="col ">
                            <div class="col col-md-2">&nbsp;</div>
                            <div class="col-12 col-md-4">
                                <button id="btnGo" type="submit" class="btn btn-primary btn-sm">
                                    <i class="fa fa-dot-circle-o"></i> Go
                                </button>
                                <button type="reset" class="btn btn-danger btn-sm">
                                    <i class="fa fa-ban"></i> Reset
                                </button>
                            </div>
                        </div>
                    </div>
                    @*</form>
                </div>*@

        </div>
    </div>
    <div>&nbsp;</div>
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <p>No Of Group : <b>@Model.NoOfGroups &nbsp;</b> | &nbsp; No Of Question : <b>@Model.NoOfQuestions &nbsp;</b> | &nbsp;No Of Question Answered: <b>@Model.NoOfCompletedQuestions</b> </p>
                <hr>

                @if (ViewBag.Msg != null && ViewBag.Msg != string.Empty)
                {
                    <div class="col-sm-12" id="alertDiv">
                        <div class="alert  alert-success alert-dismissible fade show" role="alert">
                            <span class="badge badge-pill badge-success">Success</span>@ViewBag.Msg
                            @*<button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
                        </div>
                    </div>
                }

                <h4 class="mb-3 text-info">@Model.Questions.GroupText</h4>
                @using (Html.BeginForm("QuizOne", "ManageUser", FormMethod.Post))
                {
                    <input type="hidden" id="hdnaction" name="hdnaction" value="" />
                    @Html.HiddenFor(x => Model.Questions.UIQId)
                    <div class="row">
                        <div class="list-group list-group-flush">
                            <div class="list-group-item" style="border:0px">
                                <b>@Model.Questions.QuestionText</b>
                                <div>
                                    <p>
                                        <div class=" form-check">
                                            @foreach (var choice in Model.AnswerChoices)
                                            {
                                                <label for="inline-radio1" class="form-check-label col-md-2 text-justify border p-3 align-top ">
                                                    @Html.RadioButton(Model.Questions.QuestionCode, Model.Questions.GroupId + "~" + Model.Questions.QuestionId + "~" + choice.AnswerChoiceId + "~" + Model.Questions.UIQId, choice.IsChecked) @choice.Choices
                                                </label>
                                            }
                                        </div>
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="row col-md-12" style="margin-top:5px;">
                            <span>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <input class="btn btn-success" id="submitButton" type="submit" onclick="formSubmitWithAction('Previous');" value="<< PRV ">
                            </span>
                            <span class="ml-auto">
                                <input id="btnSubmit" class="btn btn-success" type="submit" onclick="formSubmitWithAction('Next');" value="Next >>">
                            </span>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<script src="~/Admin/assets/js/vendor/jquery-2.1.4.min.js"></script>
<!--  Chart js -->


<script type="text/javascript">

    function formSubmitWithAction(action) {
        document.getElementById("hdnaction").value = action;
        document.getElementById("QuizOne").submit()
    }

    @*function formSubmitWithAction(action) {
        document.getElementById("hdnaction").value = action;
        var s = $('#myForm').serializeArray()
        //var selectValue = $('#selectValue').val();
        var qid = 0;
        alert($("#questId").val());
        if (s.length == 2)
            qid = $("#questId").val();
        else
            qid = s[2]['value'];
        var model = {
            hdnaction: action,
            QInfo: qid
            //Level: selectValue
        };

        $.ajax({
            url: API.SaveQuestionByUserByOne(),
            type: "POST",
            data: JSON.stringify(model),
            contentType: 'application/json',
            success: function (response) {

                var errorMsg = '@ViewBag.Msg';
                if (errorMsg != null) {
                    alert(errorMsg);
                    $('#alertDiv').show();
                    $('#msg').text(errorMsg);
                }

                $('#LoadQuestion').html(response);
            },
            error: function (er) { }
        });
    }

    $(document).ready(function () {
        $('#alertDiv').hide();
        //$("#btnGo").click(function () {
        var selectValue = 0;//$('#selectValue').val();
            var url = API.GetQuestionByOne() + selectValue;
            $.get(url, function (data) {
                $('#LoadQuestion').html(data);
            });
        //});



    });*@

</script>